# Generated by Django 3.2.9 on 2021-12-12 07:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptationStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID',
                                           db_index=True)),
                ('stage_name', models.CharField(max_length=128, verbose_name='Наименование этапа')),
                ('illustration', models.ImageField(upload_to='', verbose_name='Ссылка на иллюстрацию')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('point', models.IntegerField(verbose_name='Количество баллов')),
                ('status', models.IntegerField(verbose_name='Статус этапа')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='AdaptationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID',
                                           db_index=True)),
                ('id_user_employee', models.IntegerField(verbose_name='id пользователя')),
                ('id_stage', models.IntegerField(verbose_name='Ссылка на пройденный этап')),
                ('id_goal', models.IntegerField(verbose_name='Ссылка на выполненную цель')),
                ('point', models.IntegerField(verbose_name='Количество заработанных баллов')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('award_name', models.CharField(max_length=128, verbose_name='Название награды')),
                ('illustration', models.ImageField(upload_to='', verbose_name='Иллюстрация')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
            ],
        ),
        migrations.CreateModel(
            name='AwardCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('award_name', models.CharField(max_length=128, verbose_name='Название награды')),
                ('id_candidate', models.IntegerField(verbose_name='Кандидат получивший награду')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('block_name', models.CharField(max_length=128, verbose_name='Наименование блока')),
                ('description', models.CharField(max_length=256, verbose_name='Cодержание блока')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('id_stage', models.IntegerField(verbose_name='Количество баллов')),
                ('status', models.IntegerField(verbose_name='Статус блока')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('id_customer', models.IntegerField(verbose_name='id заказчика')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Отчество')),
                ('post', models.CharField(max_length=64, verbose_name='Должность')),
                ('mobile_phone', models.CharField(max_length=64, verbose_name='Телефон')),
                ('email', models.CharField(max_length=64, verbose_name='Адрес электронной почты')),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Отчество')),
                ('post', models.CharField(max_length=64, verbose_name='Должность')),
                ('role', models.CharField(max_length=64, verbose_name='Роль')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('status', models.IntegerField(verbose_name='Статус контакта')),
                ('illustration_link', models.URLField(verbose_name='Ccсылка на иллюстрацию(аватарку)')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('customer_name', models.CharField(max_length=64, verbose_name='Наименование заказчика')),
                ('city', models.CharField(max_length=64, verbose_name='Город')),
                ('address', models.CharField(max_length=128, verbose_name='Адрес')),
                ('status', models.IntegerField(verbose_name='Статус документа')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('document_name', models.CharField(max_length=128, verbose_name='Наименование документа')),
                ('document_link', models.URLField(verbose_name='Ccсылка на файл')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('status', models.IntegerField(verbose_name='Статус цели')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('id_user_employee', models.IntegerField(verbose_name='id пользователя')),
                ('id_customer', models.IntegerField(verbose_name='id заказчика')),
                ('last_name', models.CharField(max_length=64, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=64, verbose_name='Имя')),
                ('middle_name', models.CharField(max_length=64, verbose_name='Отчество')),
                ('post', models.CharField(max_length=64, verbose_name='Должность')),
                ('mobile_phone', models.CharField(max_length=64, verbose_name='Телефон')),
                ('email', models.CharField(max_length=64, verbose_name='Адрес электронной почты')),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('goal_name', models.CharField(max_length=128, verbose_name='Наименование цели')),
                ('description', models.CharField(max_length=256, verbose_name='Cодержание цели')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('status', models.IntegerField(verbose_name='Статус цели')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('level_name', models.CharField(max_length=128, verbose_name='Наименование уровня')),
                ('illustration', models.ImageField(upload_to='', verbose_name='Иллюстрация')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('status', models.IntegerField(verbose_name='Статус уровня')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('id_license_pack', models.IntegerField(verbose_name='Ссылка на пакет лицезий')),
                ('id_candidate', models.IntegerField(verbose_name='ссылка на кандидата')),
                ('start_date', models.DateField(verbose_name='Дата старта лицензии')),
                ('finish_date', models.DateField(verbose_name='Дата окончания лицензии')),
                ('status', models.IntegerField(verbose_name='Статус лицензии')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('text_message', models.CharField(max_length=512, verbose_name='Текст сообщения')),
                ('id_candidate', models.IntegerField(verbose_name='Кандидат оставивший сообщение')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('viewing_date', models.DateTimeField(verbose_name='Дата просмотра')),
                ('status', models.IntegerField(verbose_name='Статус кандидата')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('program_name', models.CharField(max_length=128, verbose_name='Наименование программы')),
                ('description', models.CharField(max_length=256, verbose_name='Cодержание программы')),
                ('duration_day', models.IntegerField(verbose_name='Длительность адаптации')),
                ('tier', models.IntegerField(verbose_name='Номер по порядку')),
                ('id_customer', models.IntegerField(verbose_name='Заказчик')),
                ('status', models.IntegerField(verbose_name='Статус программы')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='UserCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('mobile_phone', models.CharField(max_length=64, verbose_name='Телефон')),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='UserEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('user_name', models.CharField(max_length=64, verbose_name='Логин / телефон (mobile phone)')),
                ('password', models.CharField(max_length=64, verbose_name='Пароль')),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
            ],
        ),
        migrations.CreateModel(
            name='LnkStageLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
                ('id_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.level',
                                               verbose_name='id level')),
                ('id_stage',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.adaptationstage',
                                   verbose_name='id stage')),
            ],
        ),
        migrations.CreateModel(
            name='LnkLevelProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
                ('id_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.level',
                                               verbose_name='id level')),
                ('id_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.program',
                                                 verbose_name='id program')),
            ],
        ),
        migrations.CreateModel(
            name='LnkGoalProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
                ('id_goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.goal',
                                              verbose_name='id goal')),
                ('id_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.program',
                                                 verbose_name='id program')),
            ],
        ),
        migrations.CreateModel(
            name='LnkDocumentProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
                ('id_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.document',
                                                  verbose_name='id document')),
                ('id_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.program',
                                                 verbose_name='id program')),
            ],
        ),
        migrations.CreateModel(
            name='LnkContactProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID', db_index=True)),
                ('status', models.IntegerField(verbose_name='Статус записи')),
                ('create_date', models.DateTimeField(verbose_name='Дата создания')),
                ('id_employee', models.IntegerField(verbose_name='Сотрудник создавший запись')),
                ('id_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.contact',
                                                 verbose_name='id contact')),
                ('id_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.program',
                                                 verbose_name='id program')),
            ],
        ),
    ]
