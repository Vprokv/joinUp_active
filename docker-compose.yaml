version: "3.4"
services:
  postgres:
    image: postgres:12
    restart: always
    networks:
      - api-server-network
    ports:
      - "5430:5430"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=postgres
    command: -p 5430
  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:9000"
    restart: always
    volumes:
      - .:/code
      - ../files:/files
    ports:
      - "9000:9000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=postgres
      - AUTH_TABLE=employe
    links:
      - postgres:postgres
    depends_on:
      - postgres
      - redis-celery
    networks:
      - api-server-network
    env_file:
      - web.env
  nginx:
    image: nginx:1.21.5-alpine
    restart: always
    ports:
      - "80:80"
#        - "443:443" включить если появиться https
    # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
    volumes:
      - ./conf:/etc/nginx
      - ../files:/files
      - ../JoinUs/build:/front
      - ../logs_nginx:/var/log/nginx
    networks:
      - api-server-network
    depends_on:
      - web
  redis-celery:
    image: "redis:alpine"
    command: "--requirepass dockerRedis"
    ports:
      - "6379:6379"
    volumes:
      - ../.database/redis/data:/var/lib/redis/data
    restart: unless-stopped
    networks:
      - api-server-network

networks:
  api-server-network:
    driver: bridge
